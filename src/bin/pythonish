#!/usr/bin/env python3

import subprocess
import argparse
import os

def compile(src_path: str, obj_path: str):
    workdir = os.path.dirname(src_path)
    cmd = ['pythonishc', '-i', src_path, '-o', obj_path]
    subprocess.check_call(cmd, cwd=workdir)

def link(obj_path: str, bin_path: str):
    workdir = os.path.dirname(bin_path)
    cmd =['gcc', '-o', bin_path, obj_path]
    subprocess.check_call(cmd, cwd=workdir)

def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--input', help='input source code file path', required=True)
    parser.add_argument('-o', '--output', help='output binary file path', default='a.out')
    return parser.parse_args()

def main():
    try:
        args = parse_args()
        src_path = args.input
        bin_path = args.output
        obj_path = bin_path + '.o'
        compile(src_path, obj_path)
        link(obj_path, bin_path)
    except subprocess.CalledProcessError as e:
        # print nothing - compiler already reported an error
        exit(e.returncode)

if __name__ == '__main__':
    main()
